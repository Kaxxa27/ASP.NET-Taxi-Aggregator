@model TaxiApplication.WEB.Controllers.LocationLists
@{
	ViewBag.Title = "Map";
}

<!DOCTYPE html>
<html>
<head>
	<title></title>
	<meta charset="utf-8" />

	<script type="text/javascript">
		var map;
		// Создание карты с bign key
		function CreateMap() {
			 map = new Microsoft.Maps.Map('#myMap', {
				credentials: 'AinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJAinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJ'
			 });

			//var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
			//directionsManager.setRenderOptions({ itineraryContainer: document.getElementById('printoutPanel') });

			//Microsoft.Maps.loadModule('Microsoft.Maps.Directions', function () {
   //             var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
   //             directionsManager.setRenderOptions({ itineraryContainer: document.getElementById('printoutPanel') });
   //             directionsManager.showInputPanel('directionsInputContainer');
   //         });

			//document.getElementById('calculateRoute').addEventListener('click', function () {
			//	directionsManager.clearAll();
			//	directionsManager.addWaypoint(new Microsoft.Maps.Directions.Waypoint({ address: document.getElementById('start').value }));
			//	directionsManager.addWaypoint(new Microsoft.Maps.Directions.Waypoint({ address: document.getElementById('end').value }));
			//	directionsManager.calculateDirections();
			//});
	
			return map;
		}

		function calculateRoute() {
			var start = document.getElementById("start").value;
			var end = document.getElementById("end").value;

			Microsoft.Maps.loadModule('Microsoft.Maps.Directions', function () {
				var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
				var waypoint1 = new Microsoft.Maps.Directions.Waypoint({ address: start });
				var waypoint2 = new Microsoft.Maps.Directions.Waypoint({ address: end });
				directionsManager.addWaypoint(waypoint1);
				directionsManager.addWaypoint(waypoint2);
				directionsManager.calculateDirections();
			});
		}
		//function GetRoute() {
		//	ClearMap();

		//	if (directionsManager) {
		//		// Определяем Route Mode
		//		directionsManager.setRequestOptions({ routeMode: Microsoft.Maps.Directions.RouteMode.driving });

		//		// Создаем точки начала и конца пути
		//		var startWaypoint = new Microsoft.Maps.Directions.Waypoint({ address: document.getElementById('start').value });
		//		var endWaypoint = new Microsoft.Maps.Directions.Waypoint({ address: document.getElementById('end').value });

		//		directionsManager.addWaypoint(startWaypoint);
		//		directionsManager.addWaypoint(endWaypoint);

		//		directionsManager.setRenderOptions({ itineraryContainer: document.getElementById('printoutPanel') });

		//		// Считаем расстояния
		//		directionsManager.calculateDirections();
		//	} else {
		//		//Загружаем модуль directions module и создаем directions manager.
		//		Microsoft.Maps.loadModule('Microsoft.Maps.Directions', {
		//			callback: function () {
		//				//Создаем directions manager
		//				directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);

		//				//Логика маршрута
		//				GetRoute();
		//			}
		//		});
		//	}
		//}

		//function ClearMap()
		//{
		//	map.entities.clear();
		//}
		
		// Добавление маркеров на карту по координатам
		function AddMarkers(map, locations) {
			for (var i = 0; i < locations.length; i++) {

				//Create an infobox at the center of the map but don't show it.
				infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
					showCloseButton: false,
					visible: false
				});

				//Assign the infobox to a map instance.
				infobox.setMap(map);

				var pushpin = new Microsoft.Maps.Pushpin(
					new Microsoft.Maps.Location(locations[i].latitude, locations[i].longitude),
					{
						icon: createRedArrow(45),
						anchor: new Microsoft.Maps.Point(12, 12),
						title: locations[i].title
					});

				//Store some metadata with the pushpin.
				pushpin.metadata = {
					pin: locations[i].pin,
					title: locations[i].title,
					description: locations[i].description
				};

				//Add a mouse events to the pushpin.
				//Microsoft.Maps.Events.addHandler(pushpin, 'click', pushpinClicked);
				Microsoft.Maps.Events.addHandler(pushpin, 'mouseover', pushpinMouseOver);
				Microsoft.Maps.Events.addHandler(pushpin, 'mouseout', pushpinMouseOut);

				map.entities.push(pushpin);
			}
		}

		//function pushpinClicked(e) {
		//	//Make sure the infobox has metadata to display.
		//	if (e.target.metadata) {
		//		//Set the infobox options with the metadata of the pushpin.
		//		infobox.setOptions({
		//			location: e.target.getLocation(),
		//			title: e.target.metadata.title,
		//			description: e.target.metadata.description,
		//			visible: true
		//		});
		//	}
		//}	
		function pushpinMouseOver(e) {
			//Make sure the infobox has metadata to display.
			if (e.target.metadata) {
				//Set the infobox options with the metadata of the pushpin.
				infobox.setOptions({	
					maxHeight:100,
					maxWidth:300,
					location: e.target.getLocation(),
					title: e.target.metadata.title,
					description: e.target.metadata.description,
					visible: true,

					actions: [
						{
							label: 'Handler1',
							eventHandler: function () {
								alert('{pin}');
							}
						}, 
						{
							label: 'Handler2',
							eventHandler: function () {
								alert('Handler2');
							}
						}]
				});
			}
		}
		
		function pushpinMouseOut(e) {
			if (e.target.metadata) {
				infobox.setOptions({
					visible: false
				});
			}	
		}

		// Добавление картинки в виде человека с помощью canvas
		function createRedArrow(heading) {
			var c = document.createElement('canvas');
			c.width = 50;
			c.height = 50;

			var context = c.getContext('2d');

			context.beginPath();
			context.arc(25, 25, 5, 0, 2 * Math.PI);
			context.strokeStyle = "black";
			//ctx.closePath();
			context.fill();
			//ctx.stroke();
			context.stroke();

			context.beginPath();
			context.moveTo(25, 30);
			context.lineTo(25, 40);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(20, 35);
			context.lineTo(30, 35);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(25, 40);
			context.lineTo(20, 45);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(25, 40);
			context.lineTo(30, 45);
			context.strokeStyle = "black";
			context.stroke();
			//var ctx = c.getContext('2d');

			////Offset the canvas such that we will rotate around the center of our arrow
			//ctx.translate(c.width * 0.5, c.height * 0.5);

			////Rotate the canvas by the desired heading
			//ctx.rotate(heading * Math.PI / 180);

			////Return the canvas offset back to it's original position
			//ctx.translate(-c.width * 0.5, -c.height * 0.5);

			//ctx.fillStyle = '#f00';

			////Draw a path in the shape of an arrow.
			//ctx.beginPath();
			//ctx.moveTo(12, 0);
			//ctx.lineTo(5, 20);
			//ctx.lineTo(12, 15);
			//ctx.lineTo(19, 20);
			//ctx.lineTo(12, 0);
			//ctx.closePath();
			//ctx.fill();
			//ctx.stroke();

			//Generate the base64 image URL from the canvas.
			return c.toDataURL();
		}

		// Базовая функция вывода карты
		// Была сделана, потому что при обращении к bing api и передаче туда функции создания карты (CreateMap),
		// дальше работать с этой картой не представлялось возможности (чтобы добавить метку уже на существующую карту),
		// а создание новой карты лишь создавало второй объект.
		function GlobalStart() {
			@if (Model.LocationList != null)
			{
				<text>
					var locations = @Html.Raw(Json.Serialize(Model.LocationList));
					var map = CreateMap();
					AddMarkers(map, locations);
				</text>
			}
			else
			{
				<text>
						var locations = [
						{ latitude: 47.6062, longitude: -122.3321, title: 'Seattle' },
						{ latitude: 40.7128, longitude: -74.0060, title: 'New York' },
						{ latitude: 51.5074, longitude: -0.1278, title: 'London' }
					];
					var map = CreateMap();
					AddMarkers(map, locations);
				</text>
			}
		}
	</script>

	<!-- Reference to the Bing Maps SDK -->
	<script type='text/javascript'
			src='https://www.bing.com/api/maps/mapcontrol?callback=GlobalStart'
			async defer></script>



	@*	<script type='text/javascript'
	src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=AinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJAinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJ'
	async defer></script>*@

</head>
<body>

	<div>
        <label for="start">Начальный адрес:</label>
        <input type="text" id="start" name="start" />
    </div>
    <div>
        <label for="end">Конечный адрес:</label>
        <input type="text" id="end" name="end" />
    </div>
    <button type="button" onclick="calculateRoute()">Построить маршрут</button>

@*	<div>
		<input type="text" id="start" placeholder="Введите начальный адрес">
		<input type="text" id="end" placeholder="Введите конечный адрес">
		<button id="calculateRoute">Построить маршрут</button>
	</div>*@
	@*<div id='printoutPanel'>
		<label> Denis LOX</label>
	</div>
	<div id='directionsInputContainer'></div>*@
@*	<div id='searchBoxContainer'>
		<input type='text' id='searchBox' />
	</div>*@
	<div id="myMap" style="position:relative;width:1800px;height:600px;"></div>
</body>
</html>
