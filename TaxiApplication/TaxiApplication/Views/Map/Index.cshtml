@model TaxiApplication.WEB.Controllers.LocationLists
@{
	ViewBag.Title = "Map";
}

<!DOCTYPE html>
<html>
<head>
	<title></title>
	<meta charset="utf-8" />

	<script type="text/javascript">

		// Создание карты с bign key
		function CreateMap() {
			var map = new Microsoft.Maps.Map('#myMap', {
				credentials: 'AinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJAinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJ'
			});

			return map;
		}

		// Добавление маркеров на карту по координатам
		function AddMarkers(map, locations) {
			for (var i = 0; i < locations.length; i++) {
				var pushpin = new Microsoft.Maps.Pushpin(
					new Microsoft.Maps.Location(locations[i].latitude, locations[i].longitude),
					{
						icon: createRedArrow(45),
						anchor: new Microsoft.Maps.Point(12, 12),
						title: locations[i].title
					});
				map.entities.push(pushpin);
			}
		}
		// Добавление картинки в виде человека с помощью canvas
		function createRedArrow(heading) {
			var c = document.createElement('canvas');
			c.width = 50;
			c.height = 50;

			var context = c.getContext('2d');

			context.beginPath();
			context.arc(25, 25, 5, 0, 2 * Math.PI);
			context.strokeStyle = "black";
			//ctx.closePath();
			context.fill();
			//ctx.stroke();
			context.stroke();

			context.beginPath();
			context.moveTo(25, 30);
			context.lineTo(25, 40);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(20, 35);
			context.lineTo(30, 35);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(25, 40);
			context.lineTo(20, 45);
			context.strokeStyle = "black";
			context.stroke();

			context.beginPath();
			context.moveTo(25, 40);
			context.lineTo(30, 45);
			context.strokeStyle = "black";
			context.stroke();
			//var ctx = c.getContext('2d');

			////Offset the canvas such that we will rotate around the center of our arrow
			//ctx.translate(c.width * 0.5, c.height * 0.5);

			////Rotate the canvas by the desired heading
			//ctx.rotate(heading * Math.PI / 180);

			////Return the canvas offset back to it's original position
			//ctx.translate(-c.width * 0.5, -c.height * 0.5);

			//ctx.fillStyle = '#f00';

			////Draw a path in the shape of an arrow.
			//ctx.beginPath();
			//ctx.moveTo(12, 0);
			//ctx.lineTo(5, 20);
			//ctx.lineTo(12, 15);
			//ctx.lineTo(19, 20);
			//ctx.lineTo(12, 0);
			//ctx.closePath();
			//ctx.fill();
			//ctx.stroke();

			//Generate the base64 image URL from the canvas.
			return c.toDataURL();
		}

		// Базовая функция вывода карты
		// Была сделана, потому что при обращении к bing api и передаче туда функции создания карты (CreateMap),
		// дальше работать с этой картой не представлялось возможности (чтобы добавить метку уже на существующую карту),
		// а создание новой карты лишь создавало второй объект.
		function GlobalStart() {
			@if (Model.LocationList != null)
			{
				<text>
					var locations = @Html.Raw(Json.Serialize(Model.LocationList));
					var map = CreateMap();
					AddMarkers(map, locations);
				</text>
			}
			else
			{
				<text>
						var locations = [
						{ latitude: 47.6062, longitude: -122.3321, title: 'Seattle' },
						{ latitude: 40.7128, longitude: -74.0060, title: 'New York' },
						{ latitude: 51.5074, longitude: -0.1278, title: 'London' }
					];
					var map = CreateMap();
					AddMarkers(map, locations);
				</text>
			}
		}
	</script>

	<!-- Reference to the Bing Maps SDK -->
	<script type='text/javascript'
			src='https://www.bing.com/api/maps/mapcontrol?callback=GlobalStart'
			async defer></script>



	@*	<script type='text/javascript'
	src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=AinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJAinPDDIFfN3bBR1qYpHkXZ14Mjxu3aVJF2D7tuHeu6aJlzH5YnWeq618SasshvFJ'
	async defer></script>*@

</head>
<body>
	<div id="myMap" style="position:relative;width:1800px;height:600px;"></div>
</body>
</html>
